<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rest.yun.mapping.EquipmentStatusMapper" >
  <resultMap id="BaseResultMap" type="com.rest.yun.beans.EquipmentStatus" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="EquipmentId" property="equipmentid" jdbcType="INTEGER" />
    <result column="Temperature" property="temperature" jdbcType="REAL" />
    <result column="WaterValue" property="watervalue" jdbcType="DECIMAL" />
    <result column="Velocity" property="velocity" jdbcType="REAL" />
    <result column="Status" property="status" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, EquipmentId, Temperature, WaterValue, Velocity, Status, CreateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Equipment_Status
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Equipment_Status
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rest.yun.beans.EquipmentStatus" >
    insert into Equipment_Status (id, EquipmentId, Temperature, 
      WaterValue, Velocity, Status, 
      CreateTime)
    values (#{id,jdbcType=INTEGER}, #{equipmentid,jdbcType=INTEGER}, #{temperature,jdbcType=REAL}, 
      #{watervalue,jdbcType=DECIMAL}, #{velocity,jdbcType=REAL}, #{status,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rest.yun.beans.EquipmentStatus" >
    insert into Equipment_Status
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="equipmentid != null" >
        EquipmentId,
      </if>
      <if test="temperature != null" >
        Temperature,
      </if>
      <if test="watervalue != null" >
        WaterValue,
      </if>
      <if test="velocity != null" >
        Velocity,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="equipmentid != null" >
        #{equipmentid,jdbcType=INTEGER},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=REAL},
      </if>
      <if test="watervalue != null" >
        #{watervalue,jdbcType=DECIMAL},
      </if>
      <if test="velocity != null" >
        #{velocity,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rest.yun.beans.EquipmentStatus" >
    update Equipment_Status
    <set >
      <if test="equipmentid != null" >
        EquipmentId = #{equipmentid,jdbcType=INTEGER},
      </if>
      <if test="temperature != null" >
        Temperature = #{temperature,jdbcType=REAL},
      </if>
      <if test="watervalue != null" >
        WaterValue = #{watervalue,jdbcType=DECIMAL},
      </if>
      <if test="velocity != null" >
        Velocity = #{velocity,jdbcType=REAL},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rest.yun.beans.EquipmentStatus" >
    update Equipment_Status
    set EquipmentId = #{equipmentid,jdbcType=INTEGER},
      Temperature = #{temperature,jdbcType=REAL},
      WaterValue = #{watervalue,jdbcType=DECIMAL},
      Velocity = #{velocity,jdbcType=REAL},
      Status = #{status,jdbcType=VARCHAR},
      CreateTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>